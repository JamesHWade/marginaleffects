% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.R
\name{aggregate}
\alias{aggregate}
\alias{aggregate.comparisons}
\alias{aggregate.slopes}
\alias{aggregate.predictions}
\title{Aggregate (marginalize, integrate, average over) a \code{comparisons} object}
\usage{
\method{aggregate}{comparisons}(x, by = NULL, ...)

\method{aggregate}{slopes}(x, by = NULL, ...)

\method{aggregate}{predictions}(x, by = NULL, ...)
}
\arguments{
\item{x}{An object produced by the \code{comparisons} function.}
}
\value{
A "tidy" \code{data.frame} of summary statistics which conforms to the
\code{broom} package specification.
}
\description{
Calculate average contrasts by taking the mean of all the
unit-level contrasts computed by the \code{predictions} function.
}
\details{
To compute standard errors around the average marginaleffects, we begin by applying the
mean function to each column of the Jacobian. Then, we use this matrix in the Delta
method to obtained standard errors.

In Bayesian models (e.g., \code{brms}), we compute Average Marginal
Effects by applying the mean function twice. First, we apply it to all
marginal effects for each posterior draw, thereby estimating one Average (or
Median) Marginal Effect per iteration of the MCMC chain. Second, we
calculate the mean and the \code{quantile} function to the results of Step 1 to
obtain the Average Marginal Effect and its associated interval.
}
\examples{
mod <- lm(mpg ~ factor(gear), data = mtcars)
contr <- comparisons(mod, variables = list(gear = "sequential"))
tidy(contr)
Marginalize Over Unit-Level Estimates
}
