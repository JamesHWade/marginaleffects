% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_predict.R, R/methods_MASS.R,
%   R/methods_aod.R, R/methods_nnet.R, R/methods_brglm2.R, R/methods_brms.R,
%   R/methods_crch.R, R/methods_fixest.R, R/methods_lme4.R, R/methods_mclogit.R,
%   R/methods_ordinal.R, R/methods_quantreg.R, R/methods_robustlmm.R,
%   R/methods_rstanarm.R, R/methods_survival.R
\name{get_predict}
\alias{get_predict}
\alias{get_predict.default}
\alias{get_predict.polr}
\alias{get_predict.glmmPQL}
\alias{get_predict.glimML}
\alias{get_predict.multinom}
\alias{get_predict.brmultinom}
\alias{get_predict.brmsfit}
\alias{get_predict.crch}
\alias{get_predict.fixest}
\alias{get_predict.merMod}
\alias{get_predict.lmerModLmerTest}
\alias{get_predict.lmerMod}
\alias{get_predict.mblogit}
\alias{get_predict.clm}
\alias{get_predict.rq}
\alias{get_predict.rlmerMod}
\alias{get_predict.stanreg}
\alias{get_predict.coxph}
\title{Get predicted values from a model object (internal function)}
\usage{
get_predict(model, newdata, type, ...)

\method{get_predict}{default}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  vcov = FALSE,
  conf.level = NULL,
  ...
)

\method{get_predict}{polr}(
  model,
  newdata = insight::get_data(model),
  type = "probs",
  conf.level = NULL,
  ...
)

\method{get_predict}{glmmPQL}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  conf.level = NULL,
  ...
)

\method{get_predict}{glimML}(model, newdata = insight::get_data(model), type = "response", ...)

\method{get_predict}{multinom}(model, newdata = insight::get_data(model), type = "probs", ...)

\method{get_predict}{brmultinom}(model, newdata = insight::get_data(model), type = "probs", ...)

\method{get_predict}{brmsfit}(model, newdata = insight::get_data(model), type = "response", ...)

\method{get_predict}{crch}(model, newdata = NULL, type = "location", ...)

\method{get_predict}{fixest}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  conf.level = NULL,
  ...
)

\method{get_predict}{merMod}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  conf.level = NULL,
  ...
)

\method{get_predict}{lmerModLmerTest}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  conf.level = NULL,
  ...
)

\method{get_predict}{lmerMod}(
  model,
  newdata = insight::get_data(model),
  type = "response",
  conf.level = NULL,
  ...
)

\method{get_predict}{mblogit}(model, newdata = insight::get_data(model), type = "probs", ...)

\method{get_predict}{clm}(model, newdata = insight::get_data(model), type = "response", ...)

\method{get_predict}{rq}(
  model,
  newdata = insight::get_data(model),
  type = NULL,
  conf.level = NULL,
  ...
)

\method{get_predict}{rlmerMod}(model, newdata = insight::get_data(model), ...)

\method{get_predict}{stanreg}(model, newdata = insight::get_data(model), type = "response", ...)

\method{get_predict}{coxph}(
  model,
  newdata = insight::get_data(model),
  type = "lp",
  conf.level = NULL,
  ...
)
}
\arguments{
\item{model}{Model object}

\item{newdata}{A dataset over which to compute marginal effects. \code{NULL} uses
the original data used to fit the model.}

\item{type}{Type(s) of prediction as string or character vector. This can
differ based on the model type, but will typically be a string such as:
"response", "link", "probs", or "zero".}

\item{...}{Additional arguments are passed to the \code{predict()} method used to
compute adjusted predictions. These arguments are particularly useful for
mixed-effects or bayesian models (see the online vignettes on the
\code{marginaleffects} website). Available arguments can vary from model to
model, depending on the range of supported arguments by each modeling
package. See the "Model-Specific Arguments" section of the
\code{?marginaleffects} documentation for a non-exhaustive list of available
arguments.}

\item{vcov}{Variance-covariance matrix used to compute uncertainty estimates (e.g., for robust standard errors). Acceptable values are:
\itemize{
\item TRUE: Default uncertainy estimates of the model object.
\item FALSE: Omit uncertainty estimates.
\item A string which indicates the kind of uncertainty estimates to return.
\itemize{
\item Heteroskedasticity-consistent: ``"HC"\verb{, }"HC0"`, `"HC1"`, `"HC2"`, `"HC3"`, `"HC4"`, `"HC4m"`, `"HC5"`. See `?sandwich::vcovHC`
\item Heteroskedasticity and autocorrelation consistent: \code{"HAC"}
\item Other: \code{"NeweyWest"}, \code{"HerHAC"}, \code{"OPG"}. See the \code{sandwich} package documentation.
}
\item A one-sided formula which indicates the name of cluster variables (e.g., \code{~unitid}). This formula is passed to the \code{cluster} argument of the \code{sandwich::vcovCL} function.
\item A square covariance matrix
\item A function which returns a covariance matrix (e.g., \code{stats::vcov(model)})
}}

\item{conf.level}{The confidence level to use for the confidence interval if
\code{conf.int=TRUE}. Must be strictly greater than 0 and less than 1. Defaults
to 0.95, which corresponds to a 95 percent confidence interval.}
}
\value{
A vector of predicted values of length equal to the number of rows
in \code{newdata}. For models with multi-level outcomes (e.g., multinomial
logit), this function returns a matrix of predicted values with column names
equal to each of the levels/groups.
}
\description{
Get predicted values from a model object (internal function)
}
\keyword{internal}
