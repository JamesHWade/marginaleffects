% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy.R
\name{tidy.comparisons}
\alias{tidy.comparisons}
\title{Tidy a \code{comparisons} object}
\usage{
\method{tidy}{comparisons}(x, conf.int = TRUE, conf.level = 0.95, by = NULL, FUN = NULL, ...)
}
\arguments{
\item{x}{An object produced by the \code{comparisons} function.}

\item{conf.int}{Logical indicating whether or not to include a confidence interval.}

\item{conf.level}{The confidence level to use for the confidence interval if
\code{conf.int=TRUE}. Must be strictly greater than 0 and less than 1. Defaults
to 0.95, which corresponds to a 95 percent confidence interval.}

\item{by}{Character vector of variable names over which to compute group-averaged contrasts.}

\item{FUN}{function used to summarize unit-level contrasts (e.g., \code{mean} or
\code{median}). The default value \code{NULL} uses the \code{mean} function. See Details
below.}

\item{...}{Additional arguments are passed to the \code{predict()} method used to
compute adjusted predictions. These arguments are particularly useful for
mixed-effects or bayesian models (see the online vignettes on the
\code{marginaleffects} website). Available arguments can vary from model to
model, depending on the range of supported arguments by each modeling
package. See the "Model-Specific Arguments" section of the
\code{?marginaleffects} documentation for a non-exhaustive list of available
arguments.}
}
\value{
A "tidy" \code{data.frame} of summary statistics which conforms to the
\code{broom} package specification.
}
\description{
Calculate average contrasts by taking the mean of all the
unit-level contrasts computed by the \code{predictions} function.
}
\details{
In frequentist models, the \code{FUN} function is applied to the unit-level
marginal effects. If \code{FUN} is the mean function (or \code{NULL} default), this
yields an "Average Marginal Effect". If \code{FUN} is the median function, this
yields a "Median Marginal Effect".

To compute standard errors around those quantities, we begin by applying the
\code{FUN} function to each column of the Jacobian. When \code{FUN} is the mean, this
yields a "Jacobian at the mean". Then, we use this matrix in the Delta
method to obtained standard errors.

In Bayesian models (e.g., \code{brms}), we compute Average (or Median) Marginal
Effects by applying the \code{FUN} function twice. First, we apply \code{FUN} to all
marginal effects for each posterior draw, thereby estimating one Average (or
Median) Marginal Effect per iteration of the MCMC chain. Second, we apply
\code{FUN} and the \code{quantile} function to the results of Step 1 to obtain the
Average (or Median) Marginal Effect and its associated interval.
}
\examples{
mod <- lm(mpg ~ factor(gear), data = mtcars)
contr <- comparisons(mod, contrast_factor = "sequential")
tidy(contr)
}
